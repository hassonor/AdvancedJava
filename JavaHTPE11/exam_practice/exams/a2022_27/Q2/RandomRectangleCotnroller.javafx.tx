public class RandomRectangleController extends Thread {

    private final int n = 3;
    private final int SIZE = 100;
    private final int BOUND = 10;
    private int count = 0;
    private int success,fails;
    private int ms = 1100;
    private GraphicsContext gc;
    private Rectangle r;

    public void initialize(){
        gc = canv.getGraphicsContext2D();
        start();
    }

    @Override
    public void run(){

        while(count != n){
            generateRectangle();
            gc.strokeRect(r.getX(),r.getY(),r.getWidth(),r.getHeight());
            count++;
            try{
                sleep(ms);
            }
            catch(InterruptedException e){
                e.printStackTrace();
            }
        }
        Platform.runLater(this::endOfGame);
    }

    private void generateRectangle(){
        Random rand = new Random();
        gc.clearRect(0,0,canv.getWidth(), canv.getHeight());
        int x = rand.nextInt((int)canv.getWidth() - BOUND);
        int y = rand.nextInt((int)canv.getHeight() - BOUND);
        r = new Rectangle(x,y,SIZE,SIZE);
    }

    private void endOfGame(){
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        System.out.println("success: " + success);
        System.out.println("fails: " +fails);
        int score = (int) ((Math.pow(success,2)*2) - fails);
        alert.setHeaderText("Game Over. Score: " + score );
        alert.showAndWait();
    }

    @FXML
    private Canvas canv;

    @FXML
    void clickOnCanv(MouseEvent event) {
        if(r.contains(new Point2D(event.getX(),event.getY()))){
            success++;
        }
        else{
            fails++;
        }
    }

}
